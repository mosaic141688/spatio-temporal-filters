"use strict";

var _powerAssertVisitorKeys = "{\"ArrayExpression\":[\"elements\"],\"AssignmentExpression\":[\"left\",\"right\"],\"BinaryExpression\":[\"left\",\"right\"],\"Directive\":[\"value\"],\"DirectiveLiteral\":[],\"BlockStatement\":[\"directives\",\"body\"],\"BreakStatement\":[\"label\"],\"CallExpression\":[\"callee\",\"arguments\"],\"CatchClause\":[\"param\",\"body\"],\"ConditionalExpression\":[\"test\",\"consequent\",\"alternate\"],\"ContinueStatement\":[\"label\"],\"DebuggerStatement\":[],\"DoWhileStatement\":[\"test\",\"body\"],\"EmptyStatement\":[],\"ExpressionStatement\":[\"expression\"],\"File\":[\"program\"],\"ForInStatement\":[\"left\",\"right\",\"body\"],\"ForStatement\":[\"init\",\"test\",\"update\",\"body\"],\"FunctionDeclaration\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"FunctionExpression\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"Identifier\":[\"typeAnnotation\"],\"IfStatement\":[\"test\",\"consequent\",\"alternate\"],\"LabeledStatement\":[\"label\",\"body\"],\"StringLiteral\":[],\"NumericLiteral\":[],\"NullLiteral\":[],\"BooleanLiteral\":[],\"RegExpLiteral\":[],\"LogicalExpression\":[\"left\",\"right\"],\"MemberExpression\":[\"object\",\"property\"],\"NewExpression\":[\"callee\",\"arguments\"],\"Program\":[\"directives\",\"body\"],\"ObjectExpression\":[\"properties\"],\"ObjectMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectProperty\":[\"key\",\"value\",\"decorators\"],\"RestElement\":[\"argument\",\"typeAnnotation\"],\"ReturnStatement\":[\"argument\"],\"SequenceExpression\":[\"expressions\"],\"SwitchCase\":[\"test\",\"consequent\"],\"SwitchStatement\":[\"discriminant\",\"cases\"],\"ThisExpression\":[],\"ThrowStatement\":[\"argument\"],\"TryStatement\":[\"block\",\"handler\",\"finalizer\"],\"UnaryExpression\":[\"argument\"],\"UpdateExpression\":[\"argument\"],\"VariableDeclaration\":[\"declarations\"],\"VariableDeclarator\":[\"id\",\"init\"],\"WhileStatement\":[\"test\",\"body\"],\"WithStatement\":[\"object\",\"body\"],\"AssignmentPattern\":[\"left\",\"right\"],\"ArrayPattern\":[\"elements\",\"typeAnnotation\"],\"ArrowFunctionExpression\":[\"params\",\"body\",\"returnType\",\"typeParameters\"],\"ClassBody\":[\"body\"],\"ClassDeclaration\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ClassExpression\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ExportAllDeclaration\":[\"source\"],\"ExportDefaultDeclaration\":[\"declaration\"],\"ExportNamedDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"ExportSpecifier\":[\"local\",\"exported\"],\"ForOfStatement\":[\"left\",\"right\",\"body\"],\"ImportDeclaration\":[\"specifiers\",\"source\"],\"ImportDefaultSpecifier\":[\"local\"],\"ImportNamespaceSpecifier\":[\"local\"],\"ImportSpecifier\":[\"local\",\"imported\"],\"MetaProperty\":[\"meta\",\"property\"],\"ClassMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectPattern\":[\"properties\",\"typeAnnotation\"],\"SpreadElement\":[\"argument\"],\"Super\":[],\"TaggedTemplateExpression\":[\"tag\",\"quasi\"],\"TemplateElement\":[],\"TemplateLiteral\":[\"quasis\",\"expressions\"],\"YieldExpression\":[\"argument\"],\"AnyTypeAnnotation\":[],\"ArrayTypeAnnotation\":[\"elementType\"],\"BooleanTypeAnnotation\":[],\"BooleanLiteralTypeAnnotation\":[],\"NullLiteralTypeAnnotation\":[],\"ClassImplements\":[\"id\",\"typeParameters\"],\"ClassProperty\":[\"key\",\"value\",\"typeAnnotation\",\"decorators\"],\"DeclareClass\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"DeclareFunction\":[\"id\"],\"DeclareInterface\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"DeclareModule\":[\"id\",\"body\"],\"DeclareModuleExports\":[\"typeAnnotation\"],\"DeclareTypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"DeclareOpaqueType\":[\"id\",\"typeParameters\",\"supertype\"],\"DeclareVariable\":[\"id\"],\"DeclareExportDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"ExistentialTypeParam\":[],\"FunctionTypeAnnotation\":[\"typeParameters\",\"params\",\"rest\",\"returnType\"],\"FunctionTypeParam\":[\"name\",\"typeAnnotation\"],\"GenericTypeAnnotation\":[\"id\",\"typeParameters\"],\"InterfaceExtends\":[\"id\",\"typeParameters\"],\"InterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"IntersectionTypeAnnotation\":[\"types\"],\"MixedTypeAnnotation\":[],\"EmptyTypeAnnotation\":[],\"NullableTypeAnnotation\":[\"typeAnnotation\"],\"NumericLiteralTypeAnnotation\":[],\"NumberTypeAnnotation\":[],\"StringLiteralTypeAnnotation\":[],\"StringTypeAnnotation\":[],\"ThisTypeAnnotation\":[],\"TupleTypeAnnotation\":[\"types\"],\"TypeofTypeAnnotation\":[\"argument\"],\"TypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"OpaqueType\":[\"id\",\"typeParameters\",\"impltype\",\"supertype\"],\"TypeAnnotation\":[\"typeAnnotation\"],\"TypeCastExpression\":[\"expression\",\"typeAnnotation\"],\"TypeParameter\":[\"bound\"],\"TypeParameterDeclaration\":[\"params\"],\"TypeParameterInstantiation\":[\"params\"],\"ObjectTypeAnnotation\":[\"properties\",\"indexers\",\"callProperties\"],\"ObjectTypeCallProperty\":[\"value\"],\"ObjectTypeIndexer\":[\"id\",\"key\",\"value\"],\"ObjectTypeProperty\":[\"key\",\"value\"],\"ObjectTypeSpreadProperty\":[\"argument\"],\"QualifiedTypeIdentifier\":[\"id\",\"qualification\"],\"UnionTypeAnnotation\":[\"types\"],\"VoidTypeAnnotation\":[],\"JSXAttribute\":[\"name\",\"value\"],\"JSXClosingElement\":[\"name\"],\"JSXElement\":[\"openingElement\",\"children\",\"closingElement\"],\"JSXEmptyExpression\":[],\"JSXExpressionContainer\":[\"expression\"],\"JSXSpreadChild\":[\"expression\"],\"JSXIdentifier\":[],\"JSXMemberExpression\":[\"object\",\"property\"],\"JSXNamespacedName\":[\"namespace\",\"name\"],\"JSXOpeningElement\":[\"name\",\"attributes\"],\"JSXSpreadAttribute\":[\"argument\"],\"JSXText\":[],\"Noop\":[],\"ParenthesizedExpression\":[\"expression\"],\"AwaitExpression\":[\"argument\"],\"ForAwaitStatement\":[\"left\",\"right\",\"body\"],\"BindExpression\":[\"object\",\"callee\"],\"Import\":[],\"Decorator\":[\"expression\"],\"DoExpression\":[\"body\"],\"ExportDefaultSpecifier\":[\"exported\"],\"ExportNamespaceSpecifier\":[\"exported\"],\"RestProperty\":[\"argument\"],\"SpreadProperty\":[\"argument\"]}",
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

const ava = require("ava");
const Feature = require("../no-stacks").Feature;

const village_boxes = [];
const district_boxes = [];
const record_points = [];

district_boxes.push(new Feature({
    id: 1,
    box: [{
        lat: 0,
        lng: 0
    }, {
        lat: 100,
        lng: 0
    }, {
        lat: 100,
        lng: 100
    }, {
        lat: 0,
        lng: 100
    }]
}));

district_boxes.push(new Feature({
    id: 2,
    box: [{
        lat: 100,
        lng: 100
    }, {
        lat: 200,
        lng: 100
    }, {
        lat: 200,
        lng: 200
    }, {
        lat: 100,
        lng: 200
    }]
}));

village_boxes.push({
    id: 1,
    box: [{
        lat: 0,
        lng: 0
    }, {
        lat: 10,
        lng: 0
    }, {
        lat: 10,
        lng: 10
    }, {
        lat: 0,
        lng: 10
    }]
});

village_boxes.push({
    id: 2,
    box: [{
        lat: 10,
        lng: 10
    }, {
        lat: 20,
        lng: 10
    }, {
        lat: 20,
        lng: 20
    }, {
        lat: 10,
        lng: 20
    }]
});

village_boxes.push({
    id: 3,
    box: [{
        lat: 20,
        lng: 20
    }, {
        lat: 30,
        lng: 20
    }, {
        lat: 30,
        lng: 30
    }, {
        lat: 20,
        lng: 30
    }]
});

village_boxes.push({
    id: 4,
    box: [{
        lat: 100,
        lng: 100
    }, {
        lat: 110,
        lng: 100
    }, {
        lat: 110,
        lng: 110
    }, {
        lat: 100,
        lng: 110
    }]
});

village_boxes.push({
    id: 5,
    box: [{
        lat: 110,
        lng: 110
    }, {
        lat: 120,
        lng: 110
    }, {
        lat: 120,
        lng: 120
    }, {
        lat: 110,
        lng: 120
    }]
});

village_boxes.push({
    id: 6,
    box: [{
        lat: 130,
        lng: 130
    }, {
        lat: 140,
        lng: 130
    }, {
        lat: 140,
        lng: 140
    }, {
        lat: 130,
        lng: 140
    }]
});

ava.test('decorated', t => {
    var _rec = new _powerAssertRecorder();

    let f = new Feature({ id: 2, lat: 12.123, lng: 23.123 });

    var feature_in_box = function (feature, box_feature) {
        console.log(feature, box_feature);
        console.log(feature.lat > box_feature.box[0].lat && feature.lat < box_feature.box[1].lat && feature.lng > box_feature.box[0].lng && feature.lng < box_feature.box[2].lng);
    };

    f.decorate_feature('boxy_id', feature_in_box, village_boxes);
    t.true(_rec._expr(_rec._capt(_rec._capt(f, "arguments/0/callee/object").hasOwnProperty('boxy_id'), "arguments/0"), {
        content: "t.true(f.hasOwnProperty('boxy_id'))",
        filepath: "tests/no-tatck.test.js",
        line: 216,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"t\",\"range\":[0,1]},\"property\":{\"type\":\"Identifier\",\"name\":\"true\",\"range\":[2,6]},\"computed\":false,\"range\":[0,6]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"f\",\"range\":[7,8]},\"property\":{\"type\":\"Identifier\",\"name\":\"hasOwnProperty\",\"range\":[9,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"StringLiteral\",\"value\":\"boxy_id\",\"range\":[24,33]}],\"range\":[7,34]}],\"range\":[0,35]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"t\",\"range\":[0,1]},{\"type\":{\"label\":\".\"},\"range\":[1,2]},{\"type\":{\"label\":\"true\"},\"value\":\"true\",\"range\":[2,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"f\",\"range\":[7,8]},{\"type\":{\"label\":\".\"},\"range\":[8,9]},{\"type\":{\"label\":\"name\"},\"value\":\"hasOwnProperty\",\"range\":[9,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"string\"},\"value\":\"boxy_id\",\"range\":[24,33]},{\"type\":{\"label\":\")\"},\"range\":[33,34]},{\"type\":{\"label\":\")\"},\"range\":[34,35]}]",
        visitorKeys: _powerAssertVisitorKeys
    }));
});

//ava.test('')
//# sourceMappingURL=../node_modules/.cache/ava/069d9378f971fae147a2029874842389.js.map